#!groovy

pipeline {
   agent { node ("af-stage-all01") }
  options {
    buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    timestamps()
    }
    stages {
      stage("Stage1"){
        steps {
          echo '==========Building==========='
          sh 'Ыker build -t ipscript2 .'
          }
      }
      stage("Stage2"){
        steps {
          echo '==========Running============'
          sh 'docker run -d ipscript2'
        }
      }
    }
    post {
          failure {
          withCredentials([string(credentialsId: 'botSecret', variable: 'TOKEN'), string(credentialsId: 'devopschat', variable: 'CHAT_ID')]) {
          sh  ("""
              curl -s -X POST https://api.telegram.org/bot${TOKEN}/sendMessage -d chat_id=${CHAT_ID} -d parse_mode=markdown -d text='*${env.JOB_NAME}*  
              
*Branch*${env.GIT_BRANCH}  
*Build* : `Проверка алертов`'
-d <span style="color:blue">some *blue* text</span>
          """)
          }
          }
    }
}
